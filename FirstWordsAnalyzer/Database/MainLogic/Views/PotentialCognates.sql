USE [FirstWordsAnalyzer]
GO

/****** Object: View [dbo].[PotentialCognates] ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- Backup created on: 2025-07-19
-- Main logic view backup
-- Generated by Claude Code automation via sp_helptext

CREATE View [dbo].[PotentialCognates] AS

With CTEShotText AS
(SELECT [Id]
      ,[Text]
	  ,LEN([Text]) AS TextLenght
	  ,LEFT(Text, LEN([Text]) - 1) AS ShortText
      ,[FirstTranslationVariant]
      ,[SecondTranslationVariant]
      ,[ThirdTranslationVariant]
      ,[NoSense]
      ,[NotBasic]
  FROM [FirstWordsAnalyzer].[dbo].[ExistingWords]
  Where LEN([Text]) > 4),

  CTECombination AS

  (SELECT  CTEShotText.[Id] AS BasicWordId 
		  ,DW.[Id] AS DerivedWordId
  FROM [FirstWordsAnalyzer].[dbo].[ExistingWords] AS DW
  Join CTEShotText 
  On DW.Text Like CTEShotText.ShortText + '%'
  AND DW.Id <> CTEShotText.Id
  AND DW.Text <> CTEShotText.ShortText
  AND LEN(DW.Text) <> CTEShotText.TextLenght

  EXCEPT

  SELECT T1.[DerivedWordId] AS BasicWordId
      ,T2.[DerivedWordId] As DerivedWordId
  FROM [FirstWordsAnalyzer].[dbo].[ChainsOfDerivedWords] AS T1
  Join [FirstWordsAnalyzer].[dbo].[ChainsOfDerivedWords] AS T2
  On T1.WordId = T2.WordId
  And T1.[DerivedWordId] <> T2.[DerivedWordId]

  EXCEPT

  SELECT [WordId] AS BasicWordId
        ,[DerivedWordId] As DerivedWordId
  FROM [FirstWordsAnalyzer].[dbo].[ChainsOfDerivedWords]
  
  EXCEPT

  SELECT  BasicWordId
		 ,DerivedWordId
  FROM [FirstWordsAnalyzer].[dbo].Cognates)
  
  Select CTECombination.BasicWordId, CTECombination.DerivedWordId, BW.Text AS BasicWordText, DW.Text AS DerivedWordText, BW.FirstTranslationVariant AS BasicWordFirstTranslationVariant, DW.FirstTranslationVariant AS DerivedWordFirstTranslationVariant
  From CTECombination
  Join ExistingWords AS BW
  On CTECombination.BasicWordId = BW.Id
  Join ExistingWords AS DW
  On CTECombination.DerivedWordId = DW.Id

GO